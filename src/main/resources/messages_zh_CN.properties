# JsonDB 中文语言资源文件

# General
welcome_message=欢迎使用 PrelinaJsonDB! 输入 'HELP;' 或 'QUIT;' 退出。
goodbye_message=再见!
exit_message=正在退出 JsonDB...
db_prompt_prefix=jsondb
db_prompt_none=无

# Errors
error_prefix=错误: 
io_error_prefix=IO错误: 
unexpected_error_prefix=发生意外错误: 
error_unknown_command=未知命令: {0}。输入 'HELP;' 获取可用命令列表。
error_multiline_not_supported=尚不支持多行命令。请确保您的命令以分号 ';' 结尾。
error_no_db_selected=未选择数据库。请先使用 'USE <database_name>;' 命令。
error_invalid_syntax=无效语法。
error_missing_keyword=缺少关键字: {0}。
error_empty_clause=子句不能为空: {0}。
error_name_empty={0} 的名称不能为空。

# Database errors
error_db_name_empty=数据库名称不能为空。
error_db_already_exists=数据库 {0} 已存在。
error_db_not_found=未找到数据库 {0}。
error_db_not_found_cannot_use=未找到数据库 {0}。无法使用。
error_cannot_save_null_db=无法保存空的数据库对象。
error_db_load_failed=从文件 {0} 加载数据库失败: {1}
error_db_init_failed=初始化数据目录或加载数据库失败: {0}
error_db_name_empty_drop=用于 DROP 操作的数据库名称不能为空。

# Table errors
error_table_name_empty=表名不能为空。
error_table_must_have_columns=表必须至少包含一列。
error_duplicate_column_name=表 {1} 中存在重复的列名: {0}
error_column_definitions_empty=CREATE TABLE 时列定义不能为空。
error_invalid_column_definition=无效的列定义: {0}. 期望格式: <列名> <类型>
error_invalid_data_type=列 {1} 的数据类型 {0} 无效。支持的类型有: {2}
error_no_columns_defined=未为表 {0} 定义任何列。
error_table_not_found=在数据库 {1} 中未找到表 {0}。
error_column_not_found=在表 {1} 中未找到列 {0}。
error_column_not_found_where=在表 {1} 的 WHERE 子句中未找到列 {0}。
error_column_not_found_set=在表 {1} 的 SET 操作中未找到列 {0}。

# Row/Value errors
error_column_def_null=列定义不能为空。
error_row_cannot_be_null=行对象不能为空。
error_row_column_count_mismatch=表 {2} 的行数据列数 ({0}) 与表定义列数 ({1}) 不匹配。提供的列: {3}, 表定义的列: {4}
error_missing_column_in_row=表 {1} 的某一行中缺少列 {0}。
error_invalid_value_for_column=对于类型为 {2} 的列 {1} 而言，值 {0} 无效。
error_invalid_new_value_for_column=对于类型为 {2} 的列 {1} 而言，新值 {0} 无效。
error_cannot_convert_value=无法将 {0} 转换为 {1} (列: {2})
error_values_list_empty=如果表包含列，则 VALUES 列表不能为空。
error_column_count_mismatch_insert=列数量不匹配。表 {0} 有 {1} 列，但提供了 {2} 个值。

# Command specific messages
usage_create_db_table=用法: CREATE DATABASE <数据库名> 或 CREATE TABLE <表名> (<列定义>)
usage_drop_db_table=用法: DROP DATABASE <数据库名> 或 DROP TABLE <表名>
usage_use_db=用法: USE <数据库名>

message_db_created=数据库 {0} 已创建。
message_db_loaded=已加载数据库: {0}
message_db_now_using=当前使用数据库: {0}.
message_db_dropped=数据库 {0} 已删除。
message_db_saved=已保存数据库: {0}
message_db_save_failed_shutdown=关闭时保存数据库 {0} 失败: {1}
message_db_manager_shutdown=数据库管理器已关闭。
message_db_manager_shutting_down=正在关闭数据库管理器...

message_table_created=表 {0} 已在数据库 {1} 中创建。
message_row_inserted=1 行已插入表 {0}。
message_rows_deleted=({0} {1} 已删除)
message_rows_updated=({0} {1} 已更新)
message_rows_affected_0=(0 行受影响)
message_row_singular=行
message_row_plural=行

message_no_databases_found=未找到任何数据库。
message_databases_list_header=数据库列表:
message_no_tables_found=数据库 {0} 中没有表。
message_tables_list_header=数据库 {0} 中的表:
message_select_0_rows=(0 行)

# HELP Command Text
help_header=\n可用命令 (每条命令以分号 ';' 结尾):
help_separator=-------------------------------------------------------------
help_db_management=数据库管理:
help_create_db=  CREATE DATABASE <数据库名>
help_drop_db=  DROP DATABASE <数据库名>
help_use_db=  USE <数据库名>
help_show_dbs=  SHOW DATABASES
help_table_management=\n表管理:
help_create_table=  CREATE TABLE <表名> (<列1名> <列1类型>, <列2名> <列2类型>, ...)
help_supported_types=    支持类型: INTEGER, DOUBLE, STRING, BOOLEAN
help_show_tables=  SHOW TABLES
help_data_manipulation=\n数据操作:
help_insert_into=  INSERT INTO <表名> VALUES (<值1>, <值2>, ...)
help_insert_notes=    值的顺序和类型必须与列定义匹配。使用 NULL 表示空值。字符串需用 \"引号\" 包围。
help_select=  SELECT <列1, 列2 | *> FROM <表名> [WHERE <列名> = <值>]
help_select_notes=    WHERE 子句中的字符串值需用 \"引号\" 包围。使用 NULL 进行空值比较。
help_update=  UPDATE <表名> SET <列1>=<值1> [, <列2>=<值2> ...] [WHERE <列名> = <值>]
help_update_notes=    SET 或 WHERE 子句中的字符串值需用 \"引号\" 包围。使用 NULL 进行空值比较/赋值。
help_delete=  DELETE FROM <表名> [WHERE <列名> = <值>]
help_delete_notes=    WHERE 子句中的字符串值需用 \"引号\" 包围。使用 NULL 进行空值比较。
help_utility=\n工具命令:
help_help=  HELP
help_set_language=  SET LANGUAGE <语言代码>  (支持: en, zh)
help_exit=  EXIT / QUIT

# Language setting
command_set_language=SET LANGUAGE
message_language_set=语言已设置为: {0}
error_unsupported_language=不支持的语言代码: {0}。支持的代码有: {1} 

# 代码签名验证消息
signature_check_passed=代码签名验证通过。本程序包编译时间为：{0}，并已由Prelina Montelli签名。
signature_check_failed=警告：代码签名验证失败，程序可能已被修改或并非最新版本。本程序包编译时间为：{0}。
signature_check_skipped_ide=信息：正在从IDE或类文件运行，跳过签名检查。
signature_check_misconfigured=警告：代码签名检查配置错误（未设置指纹）。请联系开发者。
compilation_time_unknown=未知

